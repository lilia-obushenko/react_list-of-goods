{"version":3,"sources":["App.tsx","components/Goodlist/Goodlist.tsx","index.tsx"],"names":["SortType","GoodList","goods","map","good","className","goodsFromServer","App","state","isReversed","sortType","NONE","reverseList","setState","sortByAlphabet","ALPHABET","sortByLength","LENGTH","resetOrder","this","checkOrder","reorderedGoods","visibleGoods","sort","current","next","localeCompare","length","reverse","getReorderedGoods","type","cn","onClick","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,+FCbQC,EAAsB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACjC,6BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,oBACE,UAAQ,OAERC,UAAU,qCAHZ,SAKGD,GAHIA,SDLAE,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAMO,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUV,EAASW,MAHvB,EAMEC,YAAc,WACZ,EAAKC,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEK,eAAiB,WACf,EAAKD,SAAS,CACZH,SAAUV,EAASe,YAdzB,EAkBEC,aAAe,WACb,EAAKH,SAAS,CACZH,SAAUV,EAASiB,UApBzB,EAwBEC,WAAa,WACX,EAAKL,SAAS,CACZH,SAAUV,EAASW,KACnBF,YAAY,KA3BlB,4CA+BE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAAcV,IAAaV,EAASW,MAAQF,EAE5CY,EAlEH,SACLnB,EADK,GAGJ,IADCQ,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOpB,GAmBzB,OAjBAoB,EAAaC,MAAK,SAACC,EAASC,GAC1B,OAAQf,GACN,KAAKV,EAASe,SACZ,OAAOS,EAAQE,cAAcD,GAE/B,KAAKzB,EAASiB,OACZ,OAAOO,EAAQG,OAASF,EAAKE,OAE/B,QACE,OAAO,MAITlB,GACFa,EAAaM,UAGRN,EA2CkBO,CACrBvB,EACA,CAAEG,aAAYC,aAGhB,OACE,sBAAKL,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEyB,KAAK,SACLzB,UAAW0B,IACT,iBACA,CAAE,WAAYrB,IAAaV,EAASe,WAEtCiB,QAASb,KAAKL,eANhB,iCAWA,wBACEgB,KAAK,SACLzB,UAAW0B,IACT,oBACA,CAAE,WAAYrB,IAAaV,EAASiB,SAEtCe,QAASb,KAAKH,aANhB,4BAWA,wBACEc,KAAK,SACLzB,UAAW0B,IACT,oBAAqB,CAAE,YAAatB,IAEtCuB,QAASb,KAAKP,YALhB,qBAUCQ,GACC,wBACEU,KAAK,SACLzB,UAAU,4BACV2B,QAASb,KAAKD,WAHhB,sBAUJ,cAAC,EAAD,CAAUhB,MAAOmB,WAtFzB,GAAyBY,aE1DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.bfd9a5dc.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\nimport { GoodList } from './components/Goodlist/Goodlist';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((current, next) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return current.localeCompare(next);\n\n      case SortType.LENGTH:\n        return current.length - next.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverseList = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  sortByAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  sortByLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  resetOrder = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const checkOrder = (sortType !== SortType.NONE || isReversed);\n\n    const reorderedGoods = getReorderedGoods(\n      goodsFromServer,\n      { isReversed, sortType },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={cn(\n              'button is-warning', { 'is-light': !isReversed },\n            )}\n            onClick={this.reverseList}\n          >\n            Reverse\n          </button>\n\n          {checkOrder && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.resetOrder}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <GoodList goods={reorderedGoods} />\n      </div>\n    );\n  }\n}\n","import { FC } from 'react';\n\ninterface Props {\n  goods: string[]\n}\n\nexport const GoodList: FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        data-cy=\"Good\"\n        key={good}\n        className=\"box column is-info is-rounded mb-2\"\n      >\n        {good}\n      </li>\n    ))}\n  </ul>\n);\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}